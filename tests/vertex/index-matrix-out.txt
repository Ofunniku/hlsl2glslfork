mat2 xll_transpose(mat2 m) {
  return mat2( m[0][0], m[1][0], m[0][1], m[1][1]);
}
mat3 xll_transpose(mat3 m) {
  return mat3( m[0][0], m[1][0], m[2][0],
               m[0][1], m[1][1], m[2][1],
               m[0][2], m[1][2], m[2][2]);
}
mat4 xll_transpose(mat4 m) {
  return mat4( m[0][0], m[1][0], m[2][0], m[3][0],
               m[0][1], m[1][1], m[2][1], m[3][1],
               m[0][2], m[1][2], m[2][2], m[3][2],
               m[0][3], m[1][3], m[2][3], m[3][3]);
}
vec2 xll_matrixindex (mat2 m, int i) { vec2 v; v.x=m[0][i]; v.y=m[1][i]; return v; }
vec3 xll_matrixindex (mat3 m, int i) { vec3 v; v.x=m[0][i]; v.y=m[1][i]; v.z=m[2][i]; return v; }
vec4 xll_matrixindex (mat4 m, int i) { vec4 v; v.x=m[0][i]; v.y=m[1][i]; v.z=m[2][i]; v.w=m[3][i]; return v; }
vec4 xlat_main( in vec4 pos );
vec4 xlat_main( in vec4 pos ) {
    vec4 v;
    mat2 m2 = mat2( 1.00000, 3.00000, 2.00000, 4.00000);
    mat2 m2b = mat2( 1.00000, 3.00000, 2.00000, 4.00000);
    mat3 m3 = mat3( 1.00000, 4.00000, 7.00000, 2.00000, 5.00000, 8.00000, 3.00000, 6.00000, 9.00000);
    mat3 m3b = mat3( 1.00000, 4.00000, 7.00000, 2.00000, 5.00000, 8.00000, 3.00000, 6.00000, 9.00000);
    mat3 m3c;
    int i = 0;
    mat4 m4 = mat4( 1.00000, 5.00000, 9.00000, 13.0000, 2.00000, 6.00000, 10.0000, 14.0000, 3.00000, 7.00000, 11.0000, 15.0000, 4.00000, 8.00000, 12.0000, 16.0000);
    mat4 m4b = mat4( 1.00000, 5.00000, 9.00000, 13.0000, 2.00000, 6.00000, 10.0000, 14.0000, 3.00000, 7.00000, 11.0000, 15.0000, 4.00000, 8.00000, 12.0000, 16.0000);
    v = vec4( 0.00000);
    v.xy  += xll_matrixindex (m2, 0);
    v.xy  += xll_matrixindex (m2b, 1);
    m3c = xll_transpose( mat3( vec3( 1.00000, 2.00000, 3.00000), vec3( 4.00000, 5.00000, 6.00000), pos.xyz ) );
    v.xyz  += xll_matrixindex (m3, 0);
    v.xyz  += xll_matrixindex (m3b, 1);
    v.xyz  += xll_matrixindex (m3c, 2);
    v.xyz  += vec3( 7.00000, 8.00000, 9.00000);
    for ( ; (i < 3); ( ++i )) {
        v.xyz  += xll_matrixindex (m3c, i);
        v.x  += m3b[2][i];
        v.x  += m3c[i][2];
    }
    v.x  += m3b[2][1];
    v.x  += m3c[2][1];
    v.xyzw  += xll_matrixindex (m4, 0);
    v.xyzw  += xll_matrixindex (m4b, 1);
    return v;
}
void main() {
    vec4 xl_retval;
    xl_retval = xlat_main( vec4(gl_Vertex));
    gl_Position = vec4( xl_retval);
}
