struct a2v {
    vec4 pos;
    vec2 uv;
    vec3 normal;
    vec4 color;
};
uniform mat4 mvp;
void xlat_main( in a2v v, out vec4 opos, out float ofog, out vec2 ouv, out vec4 ocolor );
void xlat_main( in a2v v, out vec4 opos, out float ofog, out vec2 ouv, out vec4 ocolor ) {
    opos = ( mvp * v.pos );
    ocolor = v.color;
    ocolor.xyz  += v.normal;
    ouv = v.uv;
}
varying vec4 xlv_FOG;
void main() {
    a2v xlt_v;
    xlt_v.pos = vec4( gl_Vertex);
    xlt_v.uv = vec2( gl_MultiTexCoord0);
    xlt_v.normal = vec3( gl_Normal);
    xlt_v.color = vec4( gl_Color);
    vec4 xlt_opos;
    float xlt_ofog;
    vec2 xlt_ouv;
    vec4 xlt_ocolor;
    xlat_main( xlt_v, xlt_opos, xlt_ofog, xlt_ouv, xlt_ocolor);
    gl_Position = vec4( xlt_opos);
    xlv_FOG = vec4( xlt_ofog, 0.0, 0.0, 0.0);
    gl_TexCoord[0] = vec4( xlt_ouv, 0.0, 0.0);
    gl_FrontColor = vec4( xlt_ocolor);
}
